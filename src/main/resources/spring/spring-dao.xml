<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<!--配置整合mybatis过程
        1：配置数据库相关参数 实际使用是把相关参数放到一个properties文件中
        使用properties的属性： ${url}-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--2:数据库连接池 使用c3p0-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--配置连接池-->
        <!--c3p0连接池的私有属性 池子最多保留30个数据库的connection-->
        <property name="maxPoolSize" value="30" ></property>
        <property name="minPoolSize" value="10" ></property>
        <!--当调用connection的close时是把它放回池子，池子要做清理工作即commit
        关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--当maxPoolSize都被占用时，等待的时间  如果为0则是一直等待，即饥饿性死锁
        获取连接超时时间-->
        <property name="checkoutTimeout" value="1000"></property>
        <!--当获取连接失败时的重试次数 如果两次都拿不到，则报异常-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!--现在框架趋势：约定大于配置-->
    <!-- 3.配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"></property>
        <!--配置Mybatis全局配置文件:mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--扫描entity包 使用别名
        这两个配置是简化原来mybatis中的配置-->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!--扫描sql配置文件 :mapper需要的xml文件 支持多个目录-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!--4.配置扫描DAO接口包，动态实现Dao接口，自动注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory 防止提前初始化SqlSessionFactory 而配置文件还没加载-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--给出需要扫描Dao接口的包-->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>

    <!--RedisDao构造方法注入-->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao" >
        <constructor-arg index="0" value="localhost"></constructor-arg>
        <constructor-arg index="1" value="6379"></constructor-arg>
    </bean>

</beans>